
void *thfunc(void *)
{
    std::cout<<"sub thread is running\n"<<std::endl;
    return NULL;
}

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();

    pthread_t thread_id;
    pthread_attr_t thread_attr;
    struct sched_param thread_param;
    size_t stack_size;
    int res;
    res = pthread_attr_init(&thread_attr);
    if(res)
    {
        printf("pthread_attr_init failed:%d\n",res);
    }

    res = pthread_attr_setdetachstate(&thread_attr,PTHREAD_CREATE_DETACHED);
    if(res)
    {
        printf("pthread_attr_setdetachedstate failed:%d\n",res);
    }


    res=pthread_create(&thread_id,&thread_attr,thfunc,NULL);
    if(res)
    {
        printf("pthread_create failed:%d\n",res);
    }

    std::cout<<"main thread will exit\n"<<std::endl;

    pthread_exit(nullptr);
    printf("main thrad has exited,this line will not run\n");
    return a.exec();
}
