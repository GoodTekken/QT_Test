void *thrfunc(void *arg)
{
//    signal(SIGQUIT,on_signal_term);
    int tm = 50;
    while(tm>48)
    {
        std::cout<<"thrfunc--left:"<<tm<<"s--"<<std::endl;
        sleep(1);
        tm--;
    }
    return(void*)0;
}

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();

    pthread_t pid;
    int res;

    res = pthread_create(&pid,NULL,thrfunc,NULL);
    sleep(5);

    int kill_rc = pthread_kill(pid,0);
    if(kill_rc == ESRCH)
    {
        std::cout<<"the specified thread did not exist or already quit\n";
    }
    else if(kill_rc== EINVAL)
    {
        std::cout<<"siganl is invaid\n";

    }
    else
    {
        std::cout<<"the specified thread is alive\n";
    }

    return a.exec();
}
